"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var cross_fetch_1 = __importDefault(require("cross-fetch"));
var errors = __importStar(require("./errors"));
var specs_1 = require("./specs");
// use native fetch in browser mode to reduce bundle size
// webpack skip bundling the cross-fetch
var request = typeof cross_fetch_1.default === 'function' ? cross_fetch_1.default : window.fetch;
var pkg = require('../package.json'); // eslint-disable-line @typescript-eslint/no-var-requires
var StreamAnalytics = /** @class */ (function () {
    function StreamAnalytics(config) {
        if (!config || !config.apiKey || !config.token) {
            throw new errors.MisconfiguredClient('the client must be initialized with apiKey and token');
        }
        this.userData = null;
        this.apiKey = config.apiKey;
        this.token = config.token;
        this.baseUrl = config.baseUrl || 'https://analytics.stream-io-api.com/analytics/v1.0/';
        this.node = typeof window === 'undefined';
    }
    StreamAnalytics.prototype.setUser = function (data) {
        this.userData = data;
    };
    StreamAnalytics.prototype.userAgent = function () {
        return "stream-javascript-analytics-client-" + (this.node ? 'node' : 'browser') + "-" + (pkg.version || 'unknown');
    };
    StreamAnalytics.prototype._throwMissingUserData = function (event) {
        if (this.userData || event.user_data)
            return;
        throw new errors.MissingUserId('user_data should be in each event or set the default with StreamAnalytics.setUser()');
    };
    StreamAnalytics.prototype._validateAndNormalizeUserData = function (resource, eventList) {
        var _this = this;
        return eventList.map(function (event, i) {
            var err = resource === 'impression'
                ? specs_1.validateImpression(event)
                : specs_1.validateEngagement(event);
            if (err)
                throw new errors.InvalidInputData('invalid event data', i ? err.map(function (e) { return i + ": " + e; }) : err);
            _this._throwMissingUserData(event);
            return __assign(__assign({}, event), { user_data: event.user_data || _this.userData });
        });
    };
    StreamAnalytics.prototype._sendEvent = function (resource, eventList) {
        var events = this._validateAndNormalizeUserData(resource, eventList);
        return request(this.baseUrl + resource + "/?api_key=" + this.apiKey, {
            method: 'POST',
            body: JSON.stringify(resource === 'impression' ? events : { content_list: events }),
            headers: {
                'Content-Type': 'application/json',
                'X-Stream-Client': this.userAgent(),
                'stream-auth-type': 'jwt',
                Authorization: this.token,
            },
        }).then(function (response) {
            if (response.ok)
                return response.json();
            return response.json().then(function (data) {
                if (data.detail)
                    throw new errors.APIError(response.statusText + ": " + data.detail, response);
                throw new errors.APIError(response.statusText, response);
            });
        });
    };
    StreamAnalytics.prototype.trackImpression = function (eventData) {
        return this.trackImpressions([eventData]);
    };
    StreamAnalytics.prototype.trackImpressions = function (eventDataList) {
        return this._sendEvent('impression', eventDataList);
    };
    StreamAnalytics.prototype.trackEngagement = function (eventData) {
        return this.trackEngagements([eventData]);
    };
    StreamAnalytics.prototype.trackEngagements = function (eventDataList) {
        return this._sendEvent('engagement', eventDataList);
    };
    return StreamAnalytics;
}());
StreamAnalytics.errors = errors;
module.exports = StreamAnalytics;
