"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvalidInputData = exports.APIError = exports.MisconfiguredClient = exports.MissingUserId = void 0;
var canCapture = typeof Error.captureStackTrace === 'function';
var canStack = !!new Error().stack;
// workaround for ES5 compilation to preserve the Error class
var ErrorAbstract = function (message) {
    Error.call(this, message);
    this.message = message;
    this.name = this.constructor.name;
    if (canCapture)
        Error.captureStackTrace(this);
    else if (canStack)
        this.stack = new Error().stack;
    else
        this.stack = '';
};
ErrorAbstract.prototype = Object.create(Error.prototype);
var MissingUserId = /** @class */ (function (_super) {
    __extends(MissingUserId, _super);
    function MissingUserId() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MissingUserId;
}(ErrorAbstract));
exports.MissingUserId = MissingUserId;
var MisconfiguredClient = /** @class */ (function (_super) {
    __extends(MisconfiguredClient, _super);
    function MisconfiguredClient() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MisconfiguredClient;
}(ErrorAbstract));
exports.MisconfiguredClient = MisconfiguredClient;
var APIError = /** @class */ (function (_super) {
    __extends(APIError, _super);
    function APIError(msg, response) {
        var _this = _super.call(this, msg) || this;
        _this.response = response;
        return _this;
    }
    return APIError;
}(ErrorAbstract));
exports.APIError = APIError;
var InvalidInputData = /** @class */ (function (_super) {
    __extends(InvalidInputData, _super);
    function InvalidInputData(msg, errorInfo) {
        return _super.call(this, msg + ": \n\t" + errorInfo.join('\n\t')) || this;
    }
    return InvalidInputData;
}(ErrorAbstract));
exports.InvalidInputData = InvalidInputData;
