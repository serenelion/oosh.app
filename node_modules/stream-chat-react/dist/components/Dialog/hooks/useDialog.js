import { useCallback, useEffect } from 'react';
import { useDialogManager } from '../../../context';
import { useStateStore } from '../../../store';
export const useDialog = ({ id }) => {
    const { dialogManager } = useDialogManager();
    useEffect(() => () => {
        dialogManager.remove(id);
    }, [dialogManager, id]);
    return dialogManager.getOrCreate({ id });
};
export const useDialogIsOpen = (id) => {
    const { dialogManager } = useDialogManager();
    const dialogIsOpenSelector = useCallback(({ dialogsById }) => [!!dialogsById[id]?.isOpen], [id]);
    return useStateStore(dialogManager.state, dialogIsOpenSelector)[0];
};
const openedDialogCountSelector = (nextValue) => [
    Object.values(nextValue.dialogsById).reduce((count, dialog) => {
        if (dialog.isOpen)
            return count + 1;
        return count;
    }, 0),
];
export const useOpenedDialogCount = () => {
    const { dialogManager } = useDialogManager();
    return useStateStore(dialogManager.state, openedDialogCountSelector)[0];
};
